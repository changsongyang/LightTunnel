package lighttunnel.common.utils

import org.junit.Test

class CryptoUtilsTest {

    @Test
    fun randomAES128Key() {
        val key = CryptoUtils.randomAES128Key()
        System.err.println(key)
    }

    @Test
    fun randomRSAKeyPair() {
        val keyPair = CryptoUtils.randomRSAKeyPair()
        System.err.println(HexStringUtils.bytesToHexString(keyPair.first))
        System.err.println(HexStringUtils.bytesToHexString(keyPair.second))
    }

    @Test
    fun encryptAES128() {
        try {
            val key128 = "MTsSGZ1aA4wVv2E9"
            val data = CryptoUtils.encryptAES128("hello".toByteArray(), key128.toByteArray())
            val hex = HexStringUtils.bytesToHexString(data)
            System.err.println(hex)
        } catch (e: Exception) {
            e.printStackTrace()
        }
    }

    @Test
    fun decryptAES128() {
        try {
            val key128 = "MTsSGZ1aA4wVv2E9"
            val data = CryptoUtils.decryptAES128(
                HexStringUtils.hexStringToBytes("84CACCC9241CE6CC10E9D959069F3FE4"), key128.toByteArray()
            )
            System.err.println(String(data))
        } catch (e: Exception) {
            e.printStackTrace()
        }
    }

    @Test
    fun encryptRSA() {
        try {
            val pub =
                "30820122300D06092A864886F70D01010105000382010F003082010A028201010091350FA1711A7160FA857A1DCB4209FC0C059DC11B4B1577DD9D623262FBF31834FCA87827AF25E44603E42E3A91D4514309355E1A99A4F70B00B2DF84B33FCC9F6554C7F2C39175973FD50B9E67D3051BC5918597CBE8807F60CE0C63D3A33F65AD9C85B92670A4BE8E564CFB65CDBDD1FC842A9845588F0DCEE82D758717F9FE929FFF9690CFE9BA97FAE3490370A9B3225AB2EB5011E8D5CE4DBBC08EE84522EDE4CEED7BA16EB1163960484AC46C9E31649E7B9A18BF3467AF075D4DA20AE002C2043C24357411B0E0F236720B64BCF0EA0A921012845433C8629C5DA8099D6BA4E205B3E4E56D6149514A65C703F415737263EAA1E53FC52514F64DF8510203010001"
            val data = CryptoUtils.encryptRSA(
                "MTsSGZ1aA4wVv2E9".toByteArray(),
                HexStringUtils.hexStringToBytes(pub)
            )
            System.err.println(HexStringUtils.bytesToHexString(data))
        } catch (e: Exception) {
            e.printStackTrace()
        }
    }

    @Test
    fun decryptRSA() {
        try {
            val pri =

            val data = CryptoUtils.decryptRSA(
                HexStringUtils.hexStringToBytes("1D8ABDFB5BF1F26DC4483B85E25B4162FF4C61F30EFC0CBBADBE13407A19FE05A88A1B5644A4AEEA6C363CD73C09866FDBA191D57A177EE2589F83C4C642C7A39E3F726526B3149C10F60973481E3F5B88404EDB644D3FC1EF6B100069276290993055292F2B0A23A77857F8F7CE45E250769CE7B14601011C53E3BF268E50C43557FC7CCEEAA8B0F1F507E8DD20F89DCCF014423218331FE7943036F0D502649B4D2409C674385E22585E1356AF9FE6134661ABAF1D91FBB92F46FD07462F78C73FD194AF2185A5FC94CD8E9ABBEF84814BC4C4D5D497C2F71F828B5E8DAA492A037B61B731597A3E1E4C6DF81094D3E04DC12AEF57789968C5BD9782B2F41B"),
                HexStringUtils.hexStringToBytes(pri)
            )
            System.err.println(String(data))
        } catch (e: Exception) {
            e.printStackTrace()
        }
    }
}
